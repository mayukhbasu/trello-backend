name: CI/CD Pipeline

on:
  push:
    branches:
      - main  # Change this if you're using a different default branch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      # Step 1: Checkout code from the repository
      - name: Checkout repository
        uses: actions/checkout@v3

      # Step 2: Authenticate with Google Cloud using a service account
      - name: Set up Google Cloud authentication
        uses: google-github-actions/auth@v1
        with:
          credentials_json: ${{ secrets.GCP_SERVICE_ACCOUNT_KEY }}

      # Step 3: Configure gcloud CLI
      - name: Set up Google Cloud CLI
        uses: google-github-actions/setup-gcloud@v1
        with:
          project_id: ${{ secrets.GCP_PROJECT_ID }}
          export_default_credentials_to_environment: true  # Correct input

      # Step 4: Build and push Docker images to Google Container Registry (GCR)
      - name: Build and push user-service Docker image
        run: |
          docker build --platform linux/amd64 -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/user-service ./services/user-service
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/user-service

      - name: Build and push board-service Docker image
        run: |
          docker build --platform linux/amd64 -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/board-service ./services/board-service
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/board-service

      - name: Build and push task-service Docker image
        run: |
          docker build --platform linux/amd64 -t gcr.io/${{ secrets.GCP_PROJECT_ID }}/task-service ./services/task-service
          docker push gcr.io/${{ secrets.GCP_PROJECT_ID }}/task-service

      # Step 5: Deploy services to Google Cloud Run
      - name: Deploy user-service to Cloud Run
        run: |
          gcloud run deploy user-service --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/user-service --platform managed --region ${{ secrets.GCP_REGION }} --allow-unauthenticated

      - name: Deploy board-service to Cloud Run
        run: |
          gcloud run deploy board-service --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/board-service --platform managed --region ${{ secrets.GCP_REGION }} --allow-unauthenticated

      - name: Deploy task-service to Cloud Run
        run: |
          gcloud run deploy task-service --image gcr.io/${{ secrets.GCP_PROJECT_ID }}/task-service --platform managed --region ${{ secrets.GCP_REGION }} --allow-unauthenticated

      # Step 6: Update API Gateway configuration
      - name: Create or update API Gateway configuration
        run: |
          gcloud api-gateway api-configs create trello-backend-config \
              --api=trello-backend-api \
              --openapi-spec=new-api-gateway.yaml \
              --project=${{ secrets.GCP_PROJECT_ID }} \
              --backend-auth-service-account=${{ secrets.GCP_PROJECT_ID }}@appspot.gserviceaccount.com

      # Step 7: Deploy API Gateway
      - name: Deploy API Gateway
        run: |
          gcloud api-gateway gateways create trello-backend-gateway \
              --api=trello-backend-api \
              --api-config=trello-backend-config \
              --location=${{ secrets.GCP_REGION }} \
              --project=${{ secrets.GCP_PROJECT_ID }}
