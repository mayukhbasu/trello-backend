swagger: "2.0"
info:
  title: "Trello GraphQL Backend API"
  description: "API Gateway for Task, Board, and User services with Google OAuth2 SSO"
  version: "1.0.0"
schemes:
  - https

# Security Definitions for Google OAuth2
securityDefinitions:
  google_oauth2:
    type: oauth2
    flow: "implicit"
    authorizationUrl: "https://accounts.google.com/o/oauth2/auth"
    scopes:
      openid: "OpenID Connect for user identity"
      email: "Access to email address"
      profile: "Access to profile information"

paths:
  /task:
    options:
      summary: "CORS support for Task Service"
      operationId: "taskServiceOptions"
      responses:
        '204':
          description: "CORS preflight response"
          headers:
            Access-Control-Allow-Origin:
              type: string
              default: "*"
            Access-Control-Allow-Methods:
              type: string
              default: "GET, POST, OPTIONS"
            Access-Control-Allow-Headers:
              type: string
              default: "Content-Type, Authorization"
      x-google-backend:
        address: https://task-service-104926798924.us-central1.run.app
    post:
      summary: "Task Service"
      operationId: "taskService"
      x-google-backend:
        address: https://task-service-104926798924.us-central1.run.app
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: query
          schema:
            type: object
            properties:
              query:
                type: string
      responses:
        '200':
          description: "A successful GraphQL response from Task Service"
      security:
        - google_oauth2: []

  /board:
    options:
      summary: "CORS support for Board Service"
      operationId: "boardServiceOptions"
      responses:
        '204':
          description: "CORS preflight response"
          headers:
            Access-Control-Allow-Origin:
              type: string
              default: "*"
            Access-Control-Allow-Methods:
              type: string
              default: "GET, POST, OPTIONS"
            Access-Control-Allow-Headers:
              type: string
              default: "Content-Type, Authorization"
      x-google-backend:
        address: https://board-service-104926798924.us-central1.run.app
    post:
      summary: "Board Service"
      operationId: "boardService"
      x-google-backend:
        address: https://board-service-104926798924.us-central1.run.app
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: query
          schema:
            type: object
            properties:
              query:
                type: string
      responses:
        '200':
          description: "A successful GraphQL response from Board Service"
      security:
        - google_oauth2: []

  /user:
    options:
      summary: "CORS support for User Service"
      operationId: "userServiceOptions"
      responses:
        '204':
          description: "CORS preflight response"
          headers:
            Access-Control-Allow-Origin:
              type: string
              default: "*"
            Access-Control-Allow-Methods:
              type: string
              default: "GET, POST, OPTIONS"
            Access-Control-Allow-Headers:
              type: string
              default: "Content-Type, Authorization"
      x-google-backend:
        address: https://user-service-104926798924.us-central1.run.app
    post:
      summary: "User Service"
      operationId: "userService"
      x-google-backend:
        address: https://user-service-104926798924.us-central1.run.app
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - in: body
          name: query
          schema:
            type: object
            properties:
              query:
                type: string
      responses:
        '200':
          description: "A successful GraphQL response from User Service"
      security:
        - google_oauth2: []

# Security section to apply Google OAuth2 to all paths
security:
  - google_oauth2: []
